{"version":3,"sources":["components/common/like.jsx","components/movie.jsx","services/fakeMovieService.js","components/common/pagination.jsx","components/movies.jsx","uilts/paginate.js","App.js","serviceWorker.js","index.js"],"names":["Like","liked","onLikeChange","classN","onClick","className","aria-hidden","Movie","this","props","movie","onDelete","title","genre","name","numberInStock","dailyRentalRate","like","Component","movies","_id","publishDate","getMovies","Pagination","moviesCount","pageSize","onPageChange","currPage","onNextPage","onPrevPage","pagesCount","Math","ceil","pages","_","range","map","page","key","Movies","state","handleDelete","filter","m","setState","handlePageChange","handleNext","handlePrev","handleLike","index","indexOf","length","moviesToDisplay","items","pageNo","indexStart","slice","take","value","paginate","Fragment","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e354bbbe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Like = ({ liked, onLikeChange }) => {\r\n  let classN = \"fa fa-heart\";\r\n  if (!liked) classN += \"-o\";\r\n  return <i onClick={onLikeChange} className={classN} aria-hidden=\"true\"></i>;\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nclass Movie extends Component {\r\n  render() {\r\n    const { movie, onDelete, onLikeChange } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{movie.title}</td>\r\n        <td>{movie.genre.name}</td>\r\n        <td>{movie.numberInStock}</td>\r\n        <td>{movie.dailyRentalRate}</td>\r\n        <td>\r\n          <Like liked={movie.like} onLikeChange={onLikeChange} />\r\n        </td>\r\n        <td>\r\n          <button onClick={onDelete} className=\"btn btn-danger btn-sm\">\r\n            X\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({\r\n  moviesCount,\r\n  pageSize,\r\n  onPageChange,\r\n  currPage,\r\n  onNextPage,\r\n  onPrevPage,\r\n}) => {\r\n  const pagesCount = Math.ceil(moviesCount / pageSize);\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li className={currPage === 1 ? \"page-item disabled\" : \"page-item\"}>\r\n          <a className=\"page-link\" onClick={() => onPrevPage(currPage)}>\r\n            Prev\r\n          </a>\r\n        </li>\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n        <li\r\n          className={\r\n            currPage === pagesCount ? \"page-item disabled\" : \"page-item\"\r\n          }\r\n        >\r\n          <a className=\"page-link\" onClick={() => onNextPage(currPage)}>\r\n            Next\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//for reuseable component\r\nPagination.propTypes = {\r\n  moviesCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currPage: PropTypes.number.isRequired,\r\n  onNextPage: PropTypes.func.isRequired,\r\n  onPrevPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport Movie from \"./movie\";\r\n\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../uilts/paginate\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: getMovies(),\r\n    pageSize: 3,\r\n    currPage: 1,\r\n  };\r\n\r\n  handleDelete = (movie) => {\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currPage: page });\r\n  };\r\n\r\n  handleNext = (page) => {\r\n    this.setState({ currPage: page + 1 });\r\n  };\r\n  handlePrev = (page) => {\r\n    this.setState({ currPage: page - 1 });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movie };\r\n    movies[index].like = !movie.like;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  render() {\r\n    const { pageSize, currPage, movies } = this.state;\r\n    const { length: moviesCount } = movies;\r\n    const moviesToDisplay = paginate(movies, currPage, pageSize);\r\n    if (moviesCount === 0) return <p>There are no movies in the db.</p>;\r\n    return (\r\n      <React.Fragment>\r\n        <p>Showing {moviesCount} movies in the db.</p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Genre</th>\r\n              <th>Stock</th>\r\n              <th>Rate</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {moviesToDisplay.map((movie) => (\r\n              <Movie\r\n                key={movie._id}\r\n                movie={movie}\r\n                onDelete={() => this.handleDelete(movie)}\r\n                onLikeChange={() => this.handleLike(movie)}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          moviesCount={moviesCount}\r\n          pageSize={pageSize}\r\n          currPage={currPage}\r\n          onPageChange={this.handlePageChange}\r\n          onNextPage={this.handleNext}\r\n          onPrevPage={this.handlePrev}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNo, pageSize) {\r\n  const indexStart = (pageNo - 1) * pageSize;\r\n  return _(items).slice(indexStart).take(pageSize).value();\r\n}\r\n","import React, { Component } from \"react\";\nimport Movies from \"./components/movies\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <main className=\"container\">\n        <h1>A Simple Movie Service</h1>\n        <Movies />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}