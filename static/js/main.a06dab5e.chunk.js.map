{"version":3,"sources":["components/home/navBarHome.jsx","services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","uilts/paginate.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHead.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/movie/movieTable.jsx","components/movie/movies.jsx","components/notFound.jsx","components/movie/movieForm.jsx","components/common/input.jsx","components/loginForm.jsx","components/home/home.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBarHome","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","like","Pagination","itemsCount","pageSize","onPageChange","currPage","onNextPage","onPrevPage","pagesCount","Math","ceil","pages","_","range","onClick","map","page","key","paginate","items","pageNo","indexStart","slice","take","value","ListGroup","textProperty","valueProperty","onSelect","selectedGroupTextProperty","item","Like","liked","movie","onLikeChange","classN","aria-hidden","TableHead","sorting","path","currSortColumn","props","order","onSort","sortIcon","header","this","tableHeaders","label","Component","TableBody","renderCol","colName","content","get","generateKey","bodyData","columnNames","Table","headers","MovieTable","onDelete","moviesCount","Movies","state","currGenre","handleDelete","handlePageChange","filter","m","setState","handleNext","handlePrev","handleLike","index","indexOf","handleListGroupSelect","group","handleSort","getPagedData","moviesToDisplay","length","orderBy","displayingData","Fragment","g","dataToDisplay","NotFound","MovieForm","match","history","params","push","Input","error","onChange","htmlFor","autoFocus","LoginForm","account","username","password","errors","schema","Joi","string","required","validate","object","abortEarly","details","message","handleSumbit","event","preventDefault","console","log","validateProperty","obj","handleChange","input","currentTarget","errorMessage","onSubmit","Home","component","render","from","exact","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a06dab5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\"; //prevent full page reload\r\n\r\nconst NavBarHome = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Fake Movie Service\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBarHome;\r\n","export const genres = [\r\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n];\r\n\r\nexport function getGenres() {\r\n  return genres.filter((g) => g);\r\n}\r\n","import * as genresAPI from \"./fakeGenreService\";\r\n\r\nconst movies = [\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471815\",\r\n    title: \"Terminator\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n    publishDate: \"2018-01-03T19:04:28.809Z\",\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471816\",\r\n    title: \"Die Hard\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5,\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471817\",\r\n    title: \"Get Out\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5,\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471819\",\r\n    title: \"Trip to Italy\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\r\n    title: \"Airplane\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\r\n    title: \"Wedding Crashers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\r\n    title: \"Gone Girl\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5,\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\r\n    title: \"The Sixth Sense\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5,\r\n    like: false,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471821\",\r\n    title: \"The Avengers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n    like: false,\r\n  },\r\n];\r\n\r\nexport function getMovies() {\r\n  return movies;\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return movies.find((m) => m._id === id);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\r\n  movieInDb.name = movie.name;\r\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\r\n  movieInDb.numberInStock = movie.numberInStock;\r\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\r\n\r\n  if (!movieInDb._id) {\r\n    movieInDb._id = Date.now();\r\n    movies.push(movieInDb);\r\n  }\r\n\r\n  return movieInDb;\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  let movieInDb = movies.find((m) => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  return movieInDb;\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({\r\n  itemsCount,\r\n  pageSize,\r\n  onPageChange,\r\n  currPage,\r\n  onNextPage,\r\n  onPrevPage,\r\n}) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  //hide pagination if only one page or no page\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li className={currPage === 1 ? \"page-item disabled\" : \"page-item\"}>\r\n          <a className=\"page-link\" onClick={() => onPrevPage(currPage)}>\r\n            Prev\r\n          </a>\r\n        </li>\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n        <li\r\n          className={\r\n            currPage === pagesCount ? \"page-item disabled\" : \"page-item\"\r\n          }\r\n        >\r\n          <a className=\"page-link\" onClick={() => onNextPage(currPage)}>\r\n            Next\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//for reuseable component\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currPage: PropTypes.number.isRequired,\r\n  onNextPage: PropTypes.func.isRequired,\r\n  onPrevPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNo, pageSize) {\r\n  const indexStart = (pageNo - 1) * pageSize;\r\n  return _(items).slice(indexStart).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onSelect,\r\n  selectedGroupTextProperty,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          onClick={() => onSelect(item)}\r\n          className={\r\n            selectedGroupTextProperty === item[textProperty]\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ liked, movie, onLikeChange }) => {\r\n  let classN = \"fa fa-heart\";\r\n  if (!liked) classN += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={() => onLikeChange(movie)}\r\n      className={classN}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\n//input:\r\n//currSortColumn onsort headers\r\n//\r\nclass TableHead extends Component {\r\n  sorting = (path) => {\r\n    const currSortColumn = { ...this.props.currSortColumn };\r\n    if (currSortColumn.path === path) {\r\n      currSortColumn.order = currSortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      currSortColumn.path = path;\r\n      currSortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(currSortColumn);\r\n  };\r\n\r\n  sortIcon = (header) => {\r\n    const { currSortColumn } = this.props;\r\n    if (!header.path) return null;\r\n    if (header.path !== currSortColumn.path)\r\n      return <i className=\"fa fa-sort\"></i>;\r\n    if (currSortColumn.order === \"asc\")\r\n      return <i className=\"fa fa-sort-asc\"></i>;\r\n    if (currSortColumn.order === \"desc\")\r\n      return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.tableHeaders.map((header) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={header.path || header.key}\r\n              onClick={() => this.sorting(header.path)}\r\n            >\r\n              {header.label} {this.sortIcon(header)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHead;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCol = (colName, item) => {\r\n    if (colName.content) {\r\n      return colName.content(item);\r\n    }\r\n    return _.get(item, colName.path); //handle muti path of objects e.g item.genre.name\r\n  };\r\n\r\n  generateKey = (item, colName) => {\r\n    return item._id + (colName.path || colName.key);\r\n  };\r\n\r\n  render() {\r\n    const { bodyData, columnNames } = this.props;\r\n    return (\r\n      <tbody>\r\n        {bodyData.map((item) => (\r\n          <tr key={item._id}>\r\n            {columnNames.map((colName) => (\r\n              <td key={this.generateKey(item, colName)}>\r\n                {this.renderCol(colName, item)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHead from \"./tableHead\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ headers, currSortColumn, onSort, bodyData }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHead\r\n        tableHeaders={headers}\r\n        currSortColumn={currSortColumn}\r\n        onSort={onSort}\r\n      />\r\n      <TableBody bodyData={bodyData} columnNames={headers} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"../common/like\";\r\nimport Table from \"../common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nclass MovieTable extends Component {\r\n  headers = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like\r\n          liked={movie.like}\r\n          movie={movie}\r\n          onLikeChange={this.props.onLikeChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          onClick={() =>\r\n            this.props.onDelete({\r\n              movie,\r\n              moviesCount: this.props.moviesCount,\r\n            })\r\n          }\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          X\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const { movies, onSort, currSortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        headers={this.headers}\r\n        currSortColumn={currSortColumn}\r\n        onSort={onSort}\r\n        bodyData={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieTable;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../../services/fakeMovieService\";\r\nimport { getGenres } from \"../../services/fakeGenreService\";\r\nimport Pagination from \"../common/pagination\";\r\nimport { paginate } from \"../../uilts/paginate\";\r\nimport ListGroup from \"../common/listGroup\";\r\nimport MovieTable from \"./movieTable\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 3,\r\n    currPage: 1,\r\n    currGenre: { name: \"All\", _id: null },\r\n    currSortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      movies: getMovies(),\r\n      genres: [{ name: \"All\", _id: null }, ...getGenres()],\r\n    });\r\n  }\r\n\r\n  handleDelete = ({ movie, moviesCount }) => {\r\n    //if its the last movie in the curr page then jump to prev page\r\n    if (moviesCount === 1) this.handlePageChange(this.state.currPage - 1);\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currPage: page });\r\n  };\r\n\r\n  handleNext = (page) => {\r\n    this.setState({ currPage: page + 1 });\r\n  };\r\n  handlePrev = (page) => {\r\n    this.setState({ currPage: page - 1 });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movie };\r\n    movies[index].like = !movie.like;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleListGroupSelect = (group) => {\r\n    this.setState({ currGenre: group, currPage: 1 });\r\n  };\r\n\r\n  handleSort = (currSortColumn) => {\r\n    this.setState({ currSortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currPage,\r\n      movies,\r\n      currGenre,\r\n      currSortColumn,\r\n    } = this.state;\r\n\r\n    //filter\r\n    let moviesToDisplay =\r\n      currGenre && currGenre._id\r\n        ? movies.filter((movie) => movie.genre.name === currGenre.name)\r\n        : movies;\r\n    //count after filter\r\n    const moviesCount = moviesToDisplay.length;\r\n    //sort\r\n    moviesToDisplay = _.orderBy(\r\n      moviesToDisplay,\r\n      [currSortColumn.path],\r\n      [currSortColumn.order]\r\n    );\r\n    //pagindate\r\n    moviesToDisplay = paginate(moviesToDisplay, currPage, pageSize);\r\n    return { moviesToDisplay, moviesCount };\r\n  };\r\n\r\n  displayingData = ({ moviesToDisplay, moviesCount }) => {\r\n    const { pageSize, currPage, currSortColumn } = this.state;\r\n    return moviesCount === 0 ? (\r\n      <p>Showing {moviesCount} movies in the db.</p>\r\n    ) : (\r\n      <React.Fragment>\r\n        <p>Showing {moviesCount} movies in the db.</p>\r\n        <MovieTable\r\n          movies={moviesToDisplay}\r\n          onDelete={this.handleDelete}\r\n          onLikeChange={this.handleLike}\r\n          onSort={this.handleSort}\r\n          currSortColumn={currSortColumn}\r\n          moviesCount={moviesToDisplay.length}\r\n        />\r\n        <Pagination\r\n          itemsCount={moviesCount}\r\n          pageSize={pageSize}\r\n          currPage={currPage}\r\n          onPageChange={this.handlePageChange}\r\n          onNextPage={this.handleNext}\r\n          onPrevPage={this.handlePrev}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    //object distructing\r\n    const { currGenre, genres } = this.state;\r\n\r\n    let { length: count } = this.state.movies;\r\n    if (count === 0) return <p>There are no movies in the db.</p>;\r\n\r\n    const dataToDisplay = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          <ListGroup\r\n            items={genres}\r\n            textProperty=\"name\"\r\n            valueProperty=\"_id\"\r\n            selectedGroupTextProperty={currGenre.name}\r\n            onSelect={this.handleListGroupSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">{this.displayingData(dataToDisplay)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nconst MovieForm = ({ match, history }) => {\r\n  return (\r\n    <div>\r\n      <p> Movie Form: {match.params.id}</p>\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={() => history.push(\"/movies\")}\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, value, error, onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        //   ref={this.username}\r\n        autoFocus\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        id={name}\r\n        onChange={onChange}\r\n        value={value}\r\n        name={name}\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./common/input\";\r\nimport Joi from \"@hapi/joi\";\r\nclass LoginForm extends Component {\r\n  //Refs\r\n  //username = React.createRef();\r\n  //   componentDidMount() {\r\n  //     this.username.current.focus();\r\n  //   }\r\n\r\n  state = {\r\n    account: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  //handle Joi validation\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.object(this.schema).validate(\r\n      this.state.account,\r\n      options\r\n    );\r\n    if (!error) return null;\r\n    //destruct error message from Joi\r\n    const errors = {};\r\n    error.details.map((item) => {\r\n      errors[item.path[0]] = item.message;\r\n    });\r\n    // console.log(errors);\r\n    return errors;\r\n  };\r\n\r\n  handleSumbit = (event) => {\r\n    event.preventDefault();\r\n\r\n    //handling errors\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    //call the server\r\n    console.log(\"submitted\");\r\n  };\r\n\r\n  //validate property by runtime typing\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = Joi.object({ [name]: this.schema[name] });\r\n    // console.log({ [name]: this.schema[name] });\r\n    const { error } = schema.validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    //error check\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n    //update account\r\n    const account = { ...this.state.account };\r\n    account[input.name] = input.value;\r\n    this.setState({ account, errors });\r\n  };\r\n\r\n  render() {\r\n    const { account, errors } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>login</h1>\r\n        <form onSubmit={this.handleSumbit}>\r\n          <Input\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            value={account.username}\r\n            error={errors.username}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            value={account.password}\r\n            error={errors.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div className=\"form-group form-check\">\r\n            <input type=\"checkbox\" className=\"form-check-input\" id=\"save ps\" />\r\n            <label className=\"form-check-label\" htmlFor=\"save ps\">\r\n              Save the passwords\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport NavBarHome from \"./navBarHome\";\r\nimport Movies from \"../movie/movies\";\r\nimport NotFound from \"../notFound\";\r\nimport MovieForm from \"../movie/movieForm\";\r\nimport LoginForm from \"./../loginForm\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header>\r\n          <NavBarHome />\r\n        </header>\r\n        <div className=\"container\">\r\n          <Switch>\r\n            {/* switch order with: most specific one --> generate one*/}\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <Route path=\"/movies/:id\" component={MovieForm} />\r\n            <Route path=\"/movies\" component={Movies} />\r\n            <Route path=\"/customers\" render={() => <p>Customers</p>} />\r\n            <Route path=\"/rentals\" render={() => <p>Rentals</p>} />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Redirect from=\"/\" exact to=\"/movies\" />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Home from \"./components/home/home\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Home />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}