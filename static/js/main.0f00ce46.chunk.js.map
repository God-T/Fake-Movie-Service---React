{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","uilts/paginate.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHead.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/movieTable.jsx","components/movies.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","like","Pagination","itemsCount","pageSize","onPageChange","currPage","onNextPage","onPrevPage","pagesCount","Math","ceil","pages","_","range","className","onClick","map","page","key","paginate","items","pageNo","indexStart","slice","take","value","ListGroup","textProperty","valueProperty","onSelect","selectedGroupTextProperty","item","Like","liked","movie","onLikeChange","classN","aria-hidden","TableHead","sorting","path","currSortColumn","props","order","onSort","sortIcon","header","this","tableHeaders","label","Component","TableBody","renderCol","colName","content","get","generateKey","bodyData","columnNames","moviesCount","Table","headers","MovieTable","onDelete","Movies","state","currGenre","handleDelete","handlePageChange","filter","m","setState","handleNext","handlePrev","handleLike","index","indexOf","handleListGroupSelect","group","handleSort","getPagedData","moviesToDisplay","length","orderBy","displayingData","Fragment","g","dataToDisplay","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f00ce46.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n];\n\nexport function getGenres() {\n  return genres.filter((g) => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    like: false,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({\r\n  itemsCount,\r\n  pageSize,\r\n  onPageChange,\r\n  currPage,\r\n  onNextPage,\r\n  onPrevPage,\r\n}) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  //hide pagination if only one page or no page\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li className={currPage === 1 ? \"page-item disabled\" : \"page-item\"}>\r\n          <a className=\"page-link\" onClick={() => onPrevPage(currPage)}>\r\n            Prev\r\n          </a>\r\n        </li>\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n        <li\r\n          className={\r\n            currPage === pagesCount ? \"page-item disabled\" : \"page-item\"\r\n          }\r\n        >\r\n          <a className=\"page-link\" onClick={() => onNextPage(currPage)}>\r\n            Next\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//for reuseable component\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currPage: PropTypes.number.isRequired,\r\n  onNextPage: PropTypes.func.isRequired,\r\n  onPrevPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNo, pageSize) {\r\n  const indexStart = (pageNo - 1) * pageSize;\r\n  return _(items).slice(indexStart).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onSelect,\r\n  selectedGroupTextProperty,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          onClick={() => onSelect(item)}\r\n          className={\r\n            selectedGroupTextProperty === item[textProperty]\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ liked, movie, onLikeChange }) => {\r\n  let classN = \"fa fa-heart\";\r\n  if (!liked) classN += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={() => onLikeChange(movie)}\r\n      className={classN}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\n//input:\r\n//currSortColumn onsort headers\r\n//\r\nclass TableHead extends Component {\r\n  sorting = (path) => {\r\n    const currSortColumn = { ...this.props.currSortColumn };\r\n    if (currSortColumn.path === path) {\r\n      currSortColumn.order = currSortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      currSortColumn.path = path;\r\n      currSortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(currSortColumn);\r\n  };\r\n\r\n  sortIcon = (header) => {\r\n    const { currSortColumn } = this.props;\r\n    if (!header.path) return null;\r\n    if (header.path !== currSortColumn.path)\r\n      return <i className=\"fa fa-sort\"></i>;\r\n    if (currSortColumn.order === \"asc\")\r\n      return <i className=\"fa fa-sort-asc\"></i>;\r\n    if (currSortColumn.order === \"desc\")\r\n      return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.tableHeaders.map((header) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={header.path || header.key}\r\n              onClick={() => this.sorting(header.path)}\r\n            >\r\n              {header.label} {this.sortIcon(header)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHead;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCol = (colName, item) => {\r\n    if (colName.content) {\r\n      return colName.content(item);\r\n    }\r\n    return _.get(item, colName.path);\r\n  };\r\n\r\n  generateKey = (item, colName) => {\r\n    return item._id + (colName.path || colName.key);\r\n  };\r\n\r\n  render() {\r\n    const { bodyData, columnNames, moviesCount } = this.props;\r\n    return (\r\n      <tbody>\r\n        {bodyData.map((item) => (\r\n          <tr key={item._id}>\r\n            {columnNames.map((colName) => (\r\n              <td key={this.generateKey(item, colName)}>\r\n                {this.renderCol(colName, item)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHead from \"./tableHead\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ headers, currSortColumn, onSort, bodyData }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHead\r\n        tableHeaders={headers}\r\n        currSortColumn={currSortColumn}\r\n        onSort={onSort}\r\n      />\r\n      <TableBody bodyData={bodyData} columnNames={headers} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nclass MovieTable extends Component {\r\n  headers = [\r\n    { path: \"title\", label: \"Title\" },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like\r\n          liked={movie.like}\r\n          movie={movie}\r\n          onLikeChange={this.props.onLikeChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          onClick={() =>\r\n            this.props.onDelete({\r\n              movie,\r\n              moviesCount: this.props.moviesCount,\r\n            })\r\n          }\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          X\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const {\r\n      movies,\r\n      onDelete,\r\n      onLikeChange,\r\n      onSort,\r\n      currSortColumn,\r\n    } = this.props;\r\n    return (\r\n      <Table\r\n        headers={this.headers}\r\n        currSortColumn={currSortColumn}\r\n        onSort={onSort}\r\n        bodyData={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieTable;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../uilts/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MovieTable from \"./movieTable\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 3,\r\n    currPage: 1,\r\n    currGenre: \"\",\r\n    currSortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      movies: getMovies(),\r\n      genres: [{ name: \"All\", _id: null }, ...getGenres()],\r\n    });\r\n  }\r\n\r\n  handleDelete = ({ movie, moviesCount }) => {\r\n    //if its the last movie in the curr page then jump to prev page\r\n    if (moviesCount === 1) this.handlePageChange(this.state.currPage - 1);\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currPage: page });\r\n  };\r\n\r\n  handleNext = (page) => {\r\n    this.setState({ currPage: page + 1 });\r\n  };\r\n  handlePrev = (page) => {\r\n    this.setState({ currPage: page - 1 });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movie };\r\n    movies[index].like = !movie.like;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleListGroupSelect = (group) => {\r\n    this.setState({ currGenre: group, currPage: 1 });\r\n  };\r\n\r\n  handleSort = (currSortColumn) => {\r\n    this.setState({ currSortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currPage,\r\n      movies,\r\n      currGenre,\r\n      currSortColumn,\r\n    } = this.state;\r\n\r\n    //filter\r\n    let moviesToDisplay =\r\n      currGenre && currGenre._id\r\n        ? movies.filter((movie) => movie.genre.name === currGenre.name)\r\n        : movies;\r\n    //count after filter\r\n    const moviesCount = moviesToDisplay.length;\r\n    //sort\r\n    moviesToDisplay = _.orderBy(\r\n      moviesToDisplay,\r\n      [currSortColumn.path],\r\n      [currSortColumn.order]\r\n    );\r\n    //pagindate\r\n    moviesToDisplay = paginate(moviesToDisplay, currPage, pageSize);\r\n    return { moviesToDisplay, moviesCount };\r\n  };\r\n\r\n  displayingData = ({ moviesToDisplay, moviesCount }) => {\r\n    const { pageSize, currPage, currSortColumn } = this.state;\r\n    return moviesCount === 0 ? (\r\n      <p>Showing {moviesCount} movies in the db.</p>\r\n    ) : (\r\n      <React.Fragment>\r\n        <p>Showing {moviesCount} movies in the db.</p>\r\n        <MovieTable\r\n          movies={moviesToDisplay}\r\n          onDelete={this.handleDelete}\r\n          onLikeChange={this.handleLike}\r\n          onSort={this.handleSort}\r\n          currSortColumn={currSortColumn}\r\n          moviesCount={moviesToDisplay.length}\r\n        />\r\n        <Pagination\r\n          itemsCount={moviesCount}\r\n          pageSize={pageSize}\r\n          currPage={currPage}\r\n          onPageChange={this.handlePageChange}\r\n          onNextPage={this.handleNext}\r\n          onPrevPage={this.handlePrev}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    //object distructing\r\n    const { currGenre, genres } = this.state;\r\n\r\n    let { length: count } = this.state.movies;\r\n    if (count === 0) return <p>There are no movies in the db.</p>;\r\n\r\n    const dataToDisplay = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n          <ListGroup\r\n            items={genres}\r\n            textProperty=\"name\"\r\n            valueProperty=\"_id\"\r\n            selectedGroupTextProperty={currGenre.name}\r\n            onSelect={this.handleListGroupSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">{this.displayingData(dataToDisplay)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\nimport Movies from \"./components/movies\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <main className=\"container\">\n        <h1>A Fake Movie Service</h1>\n        <Movies />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}